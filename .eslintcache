[{"/Users/visal/Documents/Projects/gym_app-main/src/index.js":"1","/Users/visal/Documents/Projects/gym_app-main/src/App.js":"2","/Users/visal/Documents/Projects/gym_app-main/src/reportWebVitals.js":"3","/Users/visal/Documents/Projects/gym_app-main/src/Redux/store.js":"4","/Users/visal/Documents/Projects/gym_app-main/src/components/Student/StudentScreen.js":"5","/Users/visal/Documents/Projects/gym_app-main/src/components/Accounts/TallyPage.js":"6","/Users/visal/Documents/Projects/gym_app-main/src/components/Accounts/Withdraw/Withdraw.js":"7","/Users/visal/Documents/Projects/gym_app-main/src/components/Accounts/LedgerPage.js":"8","/Users/visal/Documents/Projects/gym_app-main/src/components/Products/ProductPage.js":"9","/Users/visal/Documents/Projects/gym_app-main/src/components/Accounts/Withdraw/WithdrawPage.js":"10","/Users/visal/Documents/Projects/gym_app-main/src/Redux/Reducer/index.js":"11","/Users/visal/Documents/Projects/gym_app-main/src/components/Student/Students.js":"12","/Users/visal/Documents/Projects/gym_app-main/src/components/Student/Student.js":"13","/Users/visal/Documents/Projects/gym_app-main/src/components/Student/AddStudent.js":"14","/Users/visal/Documents/Projects/gym_app-main/src/components/Accounts/CashInput.js":"15","/Users/visal/Documents/Projects/gym_app-main/src/components/Products/Products.js":"16","/Users/visal/Documents/Projects/gym_app-main/src/components/Products/AddProduct.js":"17","/Users/visal/Documents/Projects/gym_app-main/src/components/Accounts/Cash/CashInfoList.js":"18","/Users/visal/Documents/Projects/gym_app-main/src/Redux/Actions/actionCreators.js":"19","/Users/visal/Documents/Projects/gym_app-main/src/components/Products/Product.js":"20","/Users/visal/Documents/Projects/gym_app-main/src/Redux/Actions/actionTypes.js":"21","/Users/visal/Documents/Projects/gym_app-main/src/components/Accounts/Cash/CashInfo.js":"22","/Users/visal/Documents/Projects/gym_app-main/src/Redux/Reducer/transactionReducer.js":"23","/Users/visal/Documents/Projects/gym_app-main/src/Redux/Reducer/currentLedgerReducer.js":"24","/Users/visal/Documents/Projects/gym_app-main/src/Redux/Reducer/ledgerReducer.js":"25","/Users/visal/Documents/Projects/gym_app-main/src/Redux/Reducer/studentReducer.js":"26","/Users/visal/Documents/Projects/gym_app-main/src/Redux/Reducer/bankReducer.js":"27","/Users/visal/Documents/Projects/gym_app-main/src/components/BankTransactions/Dashboard.js":"28","/Users/visal/Documents/Projects/gym_app-main/src/components/BankTransactions/Deposit.js":"29","/Users/visal/Documents/Projects/gym_app-main/src/components/BankTransactions/Withdraw.js":"30","/Users/visal/Documents/Projects/gym_app-main/src/config/firebase.js":"31","/Users/visal/Documents/Projects/gym_app-main/src/components/SignIn.js":"32","/Users/visal/Documents/Projects/gym_app-main/src/components/PrivateRoute.js":"33","/Users/visal/Documents/Projects/gym_app-main/src/components/Dashboard.js":"34"},{"size":1374,"mtime":1611078453986,"results":"35","hashOfConfig":"36"},{"size":1991,"mtime":1611112566732,"results":"37","hashOfConfig":"36"},{"size":362,"mtime":1610265223000,"results":"38","hashOfConfig":"36"},{"size":310,"mtime":1611077044004,"results":"39","hashOfConfig":"36"},{"size":1624,"mtime":1610694160259,"results":"40","hashOfConfig":"36"},{"size":3675,"mtime":1610613136929,"results":"41","hashOfConfig":"36"},{"size":2115,"mtime":1610265223000,"results":"42","hashOfConfig":"36"},{"size":8963,"mtime":1611028628801,"results":"43","hashOfConfig":"36"},{"size":1270,"mtime":1610265223000,"results":"44","hashOfConfig":"36"},{"size":537,"mtime":1610265223000,"results":"45","hashOfConfig":"36"},{"size":656,"mtime":1611064413015,"results":"46","hashOfConfig":"36"},{"size":422,"mtime":1610265223000,"results":"47","hashOfConfig":"36"},{"size":130,"mtime":1610265223000,"results":"48","hashOfConfig":"36"},{"size":3889,"mtime":1610693523437,"results":"49","hashOfConfig":"36"},{"size":6005,"mtime":1610958347600,"results":"50","hashOfConfig":"36"},{"size":333,"mtime":1610265223000,"results":"51","hashOfConfig":"36"},{"size":2123,"mtime":1610265223000,"results":"52","hashOfConfig":"36"},{"size":381,"mtime":1610265223000,"results":"53","hashOfConfig":"36"},{"size":1713,"mtime":1611027469670,"results":"54","hashOfConfig":"36"},{"size":205,"mtime":1610265223000,"results":"55","hashOfConfig":"36"},{"size":688,"mtime":1611027384714,"results":"56","hashOfConfig":"36"},{"size":208,"mtime":1610265223000,"results":"57","hashOfConfig":"36"},{"size":733,"mtime":1610514211201,"results":"58","hashOfConfig":"36"},{"size":2147,"mtime":1611028753303,"results":"59","hashOfConfig":"36"},{"size":321,"mtime":1610274184846,"results":"60","hashOfConfig":"36"},{"size":324,"mtime":1610616557004,"results":"61","hashOfConfig":"36"},{"size":513,"mtime":1610963988507,"results":"62","hashOfConfig":"36"},{"size":212,"mtime":1610961954563,"results":"63","hashOfConfig":"36"},{"size":1446,"mtime":1610961002042,"results":"64","hashOfConfig":"36"},{"size":1444,"mtime":1610961576086,"results":"65","hashOfConfig":"36"},{"size":426,"mtime":1611077279372,"results":"66","hashOfConfig":"36"},{"size":561,"mtime":1611078776378,"results":"67","hashOfConfig":"36"},{"size":675,"mtime":1611078960778,"results":"68","hashOfConfig":"36"},{"size":2890,"mtime":1611112175740,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"1lf61rl",{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"72"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"72"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"72"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"72"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"72"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"72"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"89"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"72"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"72"},"/Users/visal/Documents/Projects/gym_app-main/src/index.js",[],["151","152"],"/Users/visal/Documents/Projects/gym_app-main/src/App.js",["153","154"],"// import logo from \"./logo.svg\";\nimport \"./App.css\";\n\n// import { Layout, Menu } from \"antd\";\n// import {\n//   MenuUnfoldOutlined,\n//   MenuFoldOutlined,\n//   UserOutlined,\n//   VideoCameraOutlined,\n//   UploadOutlined,\n// } from \"@ant-design/icons\";\n\n// import StudentPage from \"./components/Student/StudentScreen\";\nimport React, { Component } from \"react\";\nimport { Link, Route, BrowserRouter as Router, Switch } from \"react-router-dom\";\n// import SubMenu from \"antd/lib/menu/SubMenu\";\n// import TallyPage from \"./components/Accounts/TallyPage\";\n// import Withdraw from \"./components/BankTransactions/Withdraw\";\n// import LedgerPage from \"./components/Accounts/LedgerPage\";\n// import BankTransactionDashboard from \"./components/BankTransactions/Dashboard\";\n// import Deposit from \"./components/BankTransactions/Deposit\";\nimport SignIn from \"./components/SignIn\";\nimport PrivateRoute from \"./components/PrivateRoute\";\nimport Dashboard from \"./components/Dashboard\";\n\n// const { Header, Sider, Content } = Layout;\n\nclass App extends Component {\n  state = {\n    collapsed: false,\n  };\n\n  toggle = () => {\n    this.setState({\n      collapsed: !this.state.collapsed,\n    });\n  };\n  render() {\n    return (\n      <div>\n        <Switch>\n          <PrivateRoute path=\"/dashboard\">\n            <Dashboard></Dashboard>\n          </PrivateRoute>\n          <Route exact path=\"/\">\n            <SignIn></SignIn>\n          </Route>\n          {/* <Route exact path=\"/student\" component={StudentPage} />\n                <Route exact path=\"/tally\" component={TallyPage} />\n                <Route exact path=\"/ledger\" component={LedgerPage} />\n                <Route\n                  exact\n                  path=\"/bankdash\"\n                  component={BankTransactionDashboard}\n                />\n                <Route exact path=\"/deposit\" component={Deposit} />\n                <Route exact path=\"/withdraw\" component={Withdraw} /> */}\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","/Users/visal/Documents/Projects/gym_app-main/src/reportWebVitals.js",[],"/Users/visal/Documents/Projects/gym_app-main/src/Redux/store.js",["155","156"],"import { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./Reducer\";\n\nconst store = createStore(\n  rootReducer,\n  {}\n  // window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  //   applyMiddleware(thunk)\n);\n\nexport default store;\n","/Users/visal/Documents/Projects/gym_app-main/src/components/Student/StudentScreen.js",["157","158","159","160"],"import React, { Component } from \"react\";\nimport AddStudent from \"./AddStudent\";\nimport Student from \"./Student\";\n\nimport { Row, Col, List, Card } from \"antd\";\nimport \"antd/dist/antd.css\";\nimport Students from \"./Students\";\nimport Avatar from \"antd/lib/avatar/avatar\";\nimport { connect } from \"react-redux\";\nimport { addStudent } from \"../../Redux/Actions/actionCreators\";\n\nclass StudentPage extends Component {\n  state = {};\n\n  render() {\n    return (\n      <Row>\n        <Col span={12}>\n          <List\n            grid={{ gutter: 16, column: 2 }}\n            dataSource={this.props.students}\n            renderItem={(item) => (\n              <List.Item>\n                <Card title={item.stuName}>Card content</Card>\n              </List.Item>\n            )}\n          ></List>\n          {/* <List\n            itemLayout=\"horizontal\"\n            dataSource={this.props.students}\n            renderItem={(item) => (\n              <List.Item>\n                <List.Item.Meta\n                  avatar={\n                    <Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />\n                  }\n                  title={item.stuName}\n                ></List.Item.Meta>\n              </List.Item>\n            )}\n          ></List> */}\n          {/* <Students students={this.state.data}></Students> */}\n        </Col>\n        <Col span={12}>\n          <AddStudent addNewStudent={this.addNewStudent}></AddStudent>\n        </Col>\n      </Row>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    students: state.students,\n  };\n};\n\nexport default connect(mapStateToProps)(StudentPage);\n","/Users/visal/Documents/Projects/gym_app-main/src/components/Accounts/TallyPage.js",["161","162","163","164"],"import { Popconfirm, Space, Table } from \"antd\";\nimport Modal from \"antd/lib/modal/Modal\";\nimport React, { Component, useState } from \"react\";\nimport { connect } from \"react-redux\";\n\nclass TallyPage extends Component {\n  state = {\n    isModalVisible: false,\n    modalLedger: {},\n  };\n\n  setIsModalVisible(value) {\n    this.setState({\n      isModalVisible: value,\n    });\n  }\n\n  showModal(key) {\n    this.setState({\n      modalLedger: this.props.ledgers.find(\n        (ledger) => ledger.transactionDate === key\n      ),\n    });\n    console.log(`Key:${key}`);\n    this.setIsModalVisible(true);\n  }\n\n  handelOk() {\n    this.setIsModalVisible(false);\n  }\n\n  handleCancle() {\n    this.setIsModalVisible(false);\n  }\n\n  columns = [\n    {\n      title: \"Transaction ID\",\n      dataIndex: \"transactionID\",\n      key: \"transactionID\",\n    },\n    {\n      title: \"Transaction Date\",\n      dataIndex: \"transactionDate\",\n      key: \"transactionDate\",\n    },\n    {\n      title: \"Opening Balance\",\n      dataIndex: \"openingBalance\",\n      key: \"openingBalance\",\n    },\n    { title: \"Closing Balance\", dataIndex: \"finalAmount\", key: \"finalAmount\" },\n    {\n      title: \"Actions\",\n      key: \"options\",\n      render: (text, record) => (\n        <Space>\n          <Popconfirm\n            title=\"Sure to Edit\"\n            onConfirm={() => this.showModal(record.transactionID)}\n          >\n            <a>View</a>\n          </Popconfirm>\n          <Popconfirm\n            title=\"Sure to Edit\"\n            // onConfirm={() => this.deleteItem(record.id)}\n          >\n            <a>Edit</a>\n          </Popconfirm>\n          <Popconfirm\n            title=\"Sure to delete?\"\n            // onConfirm={() => this.deleteItem(record.id)}\n          >\n            <a>Delete</a>\n          </Popconfirm>\n        </Space>\n      ),\n    },\n  ];\n\n  dataSource = this.props.ledgers.map((ledger) => {\n    let date = new Date(ledger.transactionDate);\n    const month = [\n      \"JAN\",\n      \"FEB\",\n      \"MARCH\",\n      \"APRIL\",\n      \"MAY\",\n      \"JUN\",\n      \"JULY\",\n      \"SEP\",\n      \"OCT\",\n      \"NOV\",\n      \"DEC\",\n    ];\n    date = `${date.getDate()} ${month[date.getMonth()]}, ${date.getFullYear()}`;\n\n    return {\n      transactionID: ledger.transactionDate,\n      transactionDate: date,\n      openingBalance: `Rs.${ledger.openingBalance}`.replace(\n        /\\B(?=(\\d{3})+(?!\\d))/g,\n        \",\"\n      ),\n      finalAmount: `Rs.${ledger.finalAmount}`.replace(\n        /\\B(?=(\\d{3})+(?!\\d))/g,\n        \",\"\n      ),\n    };\n  });\n\n  render() {\n    return (\n      <div>\n        <Table columns={this.columns} dataSource={this.dataSource}></Table>\n        <Modal\n          title=\"Basic Modal\"\n          visible={this.state.isModalVisible}\n          onOk={(e) => this.handelOk()}\n          onCancel={(e) => this.handleCancle()}\n        >\n          <p>The Ledger of: {this.state.modalLedger.transactionDate}</p>\n          <p>Opening balance: Rs.{this.state.modalLedger.openingBalance}</p>\n          <p>Closing balance: Rs.{this.state.modalLedger.finalAmount}</p>\n          <Table\n            columns={[\n              { title: \"ID\", dataIndex: \"id\", key: \"id\" },\n              { title: \"To\", dataIndex: \"to\", key: \"to\" },\n              { title: \"Amount\", dataIndex: \"amount\", key: \"amount\" },\n              {\n                title: \"Description\",\n                dataIndex: \"description\",\n                key: \"description\",\n              },\n            ]}\n            dataSource={this.state.modalLedger.transactions}\n          ></Table>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    ledgers: state.ledgers,\n  };\n};\n\nexport default connect(mapStateToProps)(TallyPage);\n","/Users/visal/Documents/Projects/gym_app-main/src/components/Accounts/Withdraw/Withdraw.js",[],["165","166"],"/Users/visal/Documents/Projects/gym_app-main/src/components/Accounts/LedgerPage.js",["167","168","169","170"],"import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport CashInput from \"./CashInput\";\n\nimport {\n  Button,\n  Col,\n  Divider,\n  Form,\n  InputNumber,\n  Popconfirm,\n  Row,\n  Table,\n  Tag,\n} from \"antd\";\nimport \"antd/dist/antd.css\";\nimport {\n  setCB,\n  setOB,\n  addLedger,\n  setFinal,\n  setTransactionDate,\n  deleteTransaction,\n  setTransactions,\n  setLedger,\n  setBankTransactions,\n} from \"../../Redux/Actions/actionCreators\";\n\nclass LedgerPage extends Component {\n  inputStyle = {\n    borderRadius: \"5px\",\n    borderColor: \"transparent\",\n  };\n  buttonStyle = {\n    borderRadius: \"5px\",\n    marginLeft: \"10px\",\n  };\n  onOBFinish = (values) => {\n    this.props.setBankTransactions(this.props.bankTransactions);\n    this.props.setOpeningBalance(values.openingBlc);\n  };\n  onCBFinish = (values) => {\n    this.props.setClosingBalance(values.closingBlc);\n  };\n  addLedger = () => {\n    this.props.currentLedger.transactionDate = new Date().toISOString();\n    this.props.addLedger(this.props.currentLedger);\n    console.log(this.props.currentLedger);\n  };\n  columns = [\n    { title: \"ID\", dataIndex: \"id\", key: \"id\", width: 50, fixed: \"left\" },\n    { title: \"To\", dataIndex: \"to\", key: \"to\", width: 100, fixed: \"left\" },\n    { title: \"Amount\", dataIndex: \"amount\", key: \"amount\" },\n    {\n      title: \"Description\",\n      dataIndex: \"description\",\n      key: \"description\",\n      width: 120,\n    },\n    {\n      title: \"Transaction Type\",\n      dataIndex: \"transactionType\",\n      key: \"transactionType\",\n      width: 150,\n      render: (text, record) => {\n        return (\n          <Tag color={record.amount > 0 ? \"green\" : \"red\"} key={record.id}>\n            {text.toUpperCase()}\n          </Tag>\n        );\n      },\n    },\n    {\n      title: \"Actions\",\n      key: \"options\",\n      fixed: \"right\",\n      render: (text, record) => (\n        <Popconfirm\n          title=\"Sure to delete?\"\n          onConfirm={() => this.deleteItem(record.id)}\n        >\n          <a>Delete</a>\n        </Popconfirm>\n      ),\n    },\n  ];\n\n  bankColumns = [\n    { title: \"ID\", dataIndex: \"id\", key: \"id\", width: 50, fixed: \"left\" },\n    { title: \"To\", dataIndex: \"to\", key: \"to\", width: 100, fixed: \"left\" },\n    { title: \"Amount\", dataIndex: \"amount\", key: \"amount\" },\n    {\n      title: \"Voucher/Check Number\",\n      dataIndex: \"voucherNumber\",\n      key: \"voucherNumber\",\n      width: 150,\n    },\n    {\n      title: \"Transaction Type\",\n      dataIndex: \"transactionType\",\n      key: \"transactionType\",\n      fixed: \"right\",\n\n      render: (text, record) => {\n        return (\n          <Tag color={record.amount > 0 ? \"green\" : \"red\"} key={record.id}>\n            Bank\n          </Tag>\n        );\n      },\n    },\n    // {\n    //   title: \"Actions\",\n    //   key: \"options\",\n    //   fixed: \"right\",\n    //   render: (text, record) => (\n    //     <Popconfirm\n    //       title=\"Sure to delete?\"\n    //       onConfirm={() => this.deleteItem(record.id)}\n    //     >\n    //       <a>Delete</a>\n    //     </Popconfirm>\n    //   ),\n    // },\n  ];\n\n  // bankTransactionColumns = this.props.bankTransactions\n\n  //   .map((transaction) => {\n  //     // let date = new Date(transaction.transactionDate);\n  //     // const month = [\n  //     //   \"JAN\",\n  //     //   \"FEB\",\n  //     //   \"MARCH\",\n  //     //   \"APRIL\",\n  //     //   \"MAY\",\n  //     //   \"JUN\",\n  //     //   \"JULY\",\n  //     //   \"SEP\",\n  //     //   \"OCT\",\n  //     //   \"NOV\",\n  //     //   \"DEC\",\n  //     // ];\n  //     // date = `${date.getDate()} ${\n  //     //   month[date.getMonth()]\n  //     // }, ${date.getFullYear()}`;\n  //     return {};\n  //   });\n\n  deleteItem(key) {\n    this.props.deleteTransaction(key, this.props.currentLedger.transactions);\n    this.props.setClosing(this.props.currentLedger.transactions);\n    console.log(`Key:${key} `);\n  }\n\n  render() {\n    return (\n      <div style={{ margin: \"20px\" }}>\n        <Divider orientation=\"left\" style={{ fontSize: \"30px\" }}>\n          Ledger Form\n        </Divider>\n        <Row>\n          <Col>\n            <Row>\n              <div\n                style={{\n                  fontFamily: \"Montserrat\",\n                  fontWeight: \"bold\",\n                }}\n              >\n                Opening Balance\n              </div>\n            </Row>\n            <Row>\n              <Form onFinish={this.onOBFinish}>\n                <Row>\n                  <Col>\n                    <Form.Item\n                      name=\"openingBlc\"\n                      rules={[\n                        {\n                          required: true,\n                          message: \"Please enter Balance\",\n                        },\n                      ]}\n                    >\n                      <InputNumber\n                        style={this.inputStyle}\n                        placeholder=\"Balance\"\n                      />\n                    </Form.Item>\n                  </Col>\n                  <Col>\n                    <Form.Item>\n                      <Button style={this.buttonStyle} htmlType=\"submit\">\n                        Set\n                      </Button>\n                    </Form.Item>\n                  </Col>\n                </Row>\n              </Form>\n            </Row>\n          </Col>\n        </Row>\n\n        <CashInput></CashInput>\n        <Row gutter={16}>\n          <Col span={12}>\n            <Divider orientation=\"left\" style={{ fontSize: \"15px\" }}>\n              Current Transactions\n            </Divider>\n            <Table\n              scroll={{ y: 180, x: 700 }}\n              dataSource={this.props.currentLedger.transactions}\n              columns={this.columns}\n              // footer={() => (\n              //   <div\n              //     style={{\n              //       fontFamily: \"Montserrat\",\n              //       fontWeight: \"bold\",\n              //     }}\n              //   >\n              //     Total Transaction: Rs.\n              //     {`${\n              //       !this.props.currentLedger.transactions &&\n              //       !this.props.currentLedger.transactions.length\n              //         ? 0\n              //         : this.props.currentLedger.transactions\n              //             .map((transaction) => transaction.amount)\n              //             .reduce((am1, am2) => am1 + am2)\n              //     }`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}\n              //   </div>\n              // )}\n            ></Table>\n          </Col>\n          <Col span={12}>\n            <Divider orientation=\"left\" style={{ fontSize: \"15px\" }}>\n              Bank Transactions\n            </Divider>\n            <Table\n              scroll={{ y: 180, x: 600 }}\n              dataSource={this.props.bankTransactions}\n              columns={this.bankColumns}\n              // footer={() => (\n              //   <div\n              //     style={{\n              //       fontFamily: \"Montserrat\",\n              //       fontWeight: \"bold\",\n              //     }}\n              //   >\n              //     Total Transaction: Rs.\n              //     {`${\n              //       !this.props.bankTransactions &&\n              //       !this.props.bankTransactions.length\n              //         ? 0\n              //         : this.props.bankTransactions\n              //             .map((transaction) => transaction.amount)\n              //             .reduce((am1, am2) => am1 + am2)\n              //     }`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}\n              //   </div>\n              // )}\n            ></Table>\n          </Col>\n        </Row>\n        <div>{this.props.currentLedger.finalAmount}</div>\n        <Button\n          style={{\n            borderRadius: \"5px\",\n            borderColor: \"transparent\",\n            backgroundColor: \"#15CA67\",\n            color: \"white\",\n            fontFamily: \"Oswald\",\n            fontWeight: \"bold\",\n            marginTop: \"10px\",\n          }}\n          onClick={this.addLedger}\n        >\n          ADD LEDGER\n        </Button>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    currentLedger: state.currentLedger,\n    bankTransactions: state.bankTransaction,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    setOpeningBalance: (openingBalance) => {\n      dispatch(setOB(openingBalance));\n      dispatch(setFinal());\n    },\n    addLedger: (ledger) => {\n      dispatch(addLedger(ledger));\n      dispatch(\n        setLedger({\n          openingBalance: 0,\n          transactions: [],\n          transactionDate: \"\",\n          finalAmount: 0,\n        })\n      );\n    },\n    setClosing: (transactions) => {\n      // dispatch(setTransactions(transactions));\n      dispatch(setFinal());\n    },\n    deleteTransaction: (index, transactions) => {\n      dispatch(deleteTransaction(index, transactions));\n    },\n    setBankTransactions: (transactions) => {\n      dispatch(setBankTransactions(transactions));\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LedgerPage);\n","/Users/visal/Documents/Projects/gym_app-main/src/components/Products/ProductPage.js",[],["171","172"],"/Users/visal/Documents/Projects/gym_app-main/src/components/Accounts/Withdraw/WithdrawPage.js",[],"/Users/visal/Documents/Projects/gym_app-main/src/Redux/Reducer/index.js",[],"/Users/visal/Documents/Projects/gym_app-main/src/components/Student/Students.js",[],"/Users/visal/Documents/Projects/gym_app-main/src/components/Student/Student.js",[],"/Users/visal/Documents/Projects/gym_app-main/src/components/Student/AddStudent.js",["173","174","175","176","177","178","179"],"import React, { Component } from \"react\";\nimport {\n  Button,\n  DatePicker,\n  Input,\n  Form,\n  InputNumber,\n  Switch,\n  Select,\n  Col,\n  Row,\n} from \"antd\";\nimport \"antd/dist/antd.css\";\nimport { connect } from \"react-redux\";\nimport { addStudent } from \"../../Redux/Actions/actionCreators\";\nimport { CloseOutlined, CheckOutlined } from \"@ant-design/icons\";\n\nlet paymentPackage = \"1\";\n\nclass AddStudent extends Component {\n  state = {\n    stuName: \"\",\n    stuAge: 0,\n    initWeight: 0,\n    address: \"\",\n    phNumber: 0,\n    email: \"\",\n    photoURI: \"\",\n    joinedDate: \"\",\n    isPaid: false,\n    paymentPackage: 1,\n  };\n\n  onFinish = (values) => {\n    console.log(values);\n    this.props.addStudent(values);\n    // e.preventDefault();\n    // console.log({\n    //   ...this.state,\n    //   progress: [],\n    // });\n  };\n\n  onFinishFailed = (errorInfo) => {\n    console.log(\"Failed:\", errorInfo);\n  };\n\n  handleChange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  onPackageChange = (value) => {\n    paymentPackage = value;\n  };\n\n  render() {\n    return (\n      <Form onFinish={this.onFinish}>\n        <Form.Item\n          rules={[\n            {\n              required: true,\n              message: \"Please enter name!\",\n            },\n          ]}\n          label=\"Student's Name\"\n          name=\"stuName\"\n        >\n          <Input></Input>\n        </Form.Item>\n\n        <Form.Item\n          rules={[\n            {\n              required: true,\n              message: \"Please enter age!\",\n            },\n          ]}\n          label=\"Student's Age\"\n          name=\"stuAge\"\n        >\n          <InputNumber></InputNumber>\n        </Form.Item>\n\n        <Form.Item\n          rules={[\n            {\n              required: true,\n              message: \"Please input weight!\",\n            },\n          ]}\n          label=\"Student's weight\"\n          name=\"initWeight\"\n        >\n          <InputNumber></InputNumber>\n        </Form.Item>\n\n        <Form.Item\n          rules={[\n            {\n              required: true,\n              message: \"Please input address!\",\n            },\n          ]}\n          label=\"Student's Address\"\n          name=\"address\"\n        >\n          <Input></Input>\n        </Form.Item>\n\n        <Form.Item\n          rules={[\n            {\n              required: true,\n              message: \"Please input phone number!\",\n            },\n          ]}\n          label=\"Student's Number\"\n          name=\"phNumber\"\n        >\n          <InputNumber></InputNumber>\n        </Form.Item>\n\n        <Form.Item\n          rules={[\n            {\n              required: true,\n              message: \"Please input email!\",\n            },\n          ]}\n          label=\"Student's Email\"\n          name=\"email\"\n        >\n          <Input></Input>\n        </Form.Item>\n\n        <Form.Item name=\"photoUri\">\n          <Input type=\"file\" accept=\"image/*\"></Input>\n        </Form.Item>\n\n        <Form.Item name=\"joindedDate\">\n          <DatePicker></DatePicker>\n        </Form.Item>\n        {/* <Form.Item name=\"isPaid\">\n          <Switch\n            checkedChildren={<CheckOutlined />}\n            unCheckedChildren={<CloseOutlined />}\n            defaultChecked\n          ></Switch>\n        </Form.Item>\n        <Form.Item name=\"paymentPackage\">\n          <Select defaultValue=\"1\" style={{ width: 120 }}>\n            <Select.Option value=\"1\">1-mnth</Select.Option>\n            <Select.Option value=\"2\">2-mnth</Select.Option>\n            <Select.Option value=\"3\">3-mnth</Select.Option>\n          </Select>\n        </Form.Item> */}\n\n        <Form.Item>\n          <Button htmlType=\"submit\">Save</Button>\n        </Form.Item>\n      </Form>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    addStudent: (student) => {\n      dispatch(addStudent(student));\n    },\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(AddStudent);\n","/Users/visal/Documents/Projects/gym_app-main/src/components/Accounts/CashInput.js",[],["180","181"],"/Users/visal/Documents/Projects/gym_app-main/src/components/Products/Products.js",[],"/Users/visal/Documents/Projects/gym_app-main/src/components/Products/AddProduct.js",[],"/Users/visal/Documents/Projects/gym_app-main/src/components/Accounts/Cash/CashInfoList.js",[],"/Users/visal/Documents/Projects/gym_app-main/src/Redux/Actions/actionCreators.js",[],"/Users/visal/Documents/Projects/gym_app-main/src/components/Products/Product.js",[],"/Users/visal/Documents/Projects/gym_app-main/src/Redux/Actions/actionTypes.js",[],"/Users/visal/Documents/Projects/gym_app-main/src/components/Accounts/Cash/CashInfo.js",[],"/Users/visal/Documents/Projects/gym_app-main/src/Redux/Reducer/transactionReducer.js",["182","183","184","185","186"],"import { setTransactions } from \"../Actions/actionCreators\";\nimport {\n  ADD_TRANSACTION,\n  DELETE_TRANSACTION,\n  LOAD_TRANSACTIONS,\n} from \"../Actions/actionTypes\";\n\nfunction transactionReducer(state = [], action) {\n  switch (action.type) {\n    // case ADD_TRANSACTION:\n    //   action.transaction.id = state === [] ? 1 : state.length + 1;\n    //   return [...state, action.transaction];\n    case LOAD_TRANSACTIONS:\n      return action.transactions;\n    // case DELETE_TRANSACTION:\n    //   return arrayRemove(action.transactions, action.id);\n    default:\n      return state;\n  }\n}\n\nfunction arrayRemove(array, value) {\n  return array.filter((element) => {\n    return element.id != value;\n  });\n}\n\nexport default transactionReducer;\n","/Users/visal/Documents/Projects/gym_app-main/src/Redux/Reducer/currentLedgerReducer.js",["187","188"],"import {\n  SET_FINAL,\n  SET_OB,\n  SET_CB,\n  SET_TRANSACTIONS,\n  SET_TRANSACTION_DATE,\n  ADD_TRANSACTION,\n  DELETE_TRANSACTION,\n  SET_LEDGER,\n  SET_BANK_TRANSACTIONS,\n} from \"../Actions/actionTypes\";\n\nfunction currentLedgerReducer(\n  state = {\n    openingBalance: 0,\n    transactions: [],\n    transactionDate: \"\",\n    finalAmount: 0,\n    bankTransactions: [],\n  },\n  action\n) {\n  switch (action.type) {\n    case SET_OB:\n      return {\n        ...state,\n        openingBalance: action.openingBalance,\n      };\n    case SET_FINAL:\n      const total = (num1, num2) => num1 + num2;\n      return {\n        ...state,\n        finalAmount:\n          state.transactions.length === 0\n            ? state.openingBalance +\n              state.bankTransactions\n                .map((transaction) => transaction.amount)\n                .reduce(total)\n            : state.openingBalance +\n              state.transactions\n                .map((transaction) => transaction.amount)\n                .reduce(total) +\n              state.bankTransactions\n                .map((transaction) => transaction.amount)\n                .reduce(total),\n      };\n    case SET_TRANSACTIONS:\n      return {\n        ...state,\n        transactions: action.transactions,\n      };\n    case SET_BANK_TRANSACTIONS:\n      return {\n        ...state,\n        bankTransactions: action.transactions,\n      };\n    case ADD_TRANSACTION:\n      action.transaction.id =\n        state.transactions === [] ? 1 : state.transactions.length + 1;\n      let newTransactions = [...state.transactions, action.transaction];\n      return {\n        ...state,\n        transactions: newTransactions,\n      };\n    case SET_TRANSACTION_DATE:\n      return {\n        ...state,\n        transactionDate: action.transationDate,\n      };\n    case DELETE_TRANSACTION:\n      return {\n        ...state,\n        transactions: arrayRemove(action.transactions, action.id),\n      };\n    case SET_LEDGER:\n      return action.ledger;\n    default:\n      return state;\n  }\n}\n\nfunction arrayRemove(array, value) {\n  return array.filter((element) => {\n    return element.id != value;\n  });\n}\n\nexport default currentLedgerReducer;\n","/Users/visal/Documents/Projects/gym_app-main/src/Redux/Reducer/ledgerReducer.js",[],"/Users/visal/Documents/Projects/gym_app-main/src/Redux/Reducer/studentReducer.js",[],"/Users/visal/Documents/Projects/gym_app-main/src/Redux/Reducer/bankReducer.js",[],"/Users/visal/Documents/Projects/gym_app-main/src/components/BankTransactions/Dashboard.js",[],"/Users/visal/Documents/Projects/gym_app-main/src/components/BankTransactions/Deposit.js",[],"/Users/visal/Documents/Projects/gym_app-main/src/components/BankTransactions/Withdraw.js",[],"/Users/visal/Documents/Projects/gym_app-main/src/config/firebase.js",[],"/Users/visal/Documents/Projects/gym_app-main/src/components/SignIn.js",[],"/Users/visal/Documents/Projects/gym_app-main/src/components/PrivateRoute.js",[],"/Users/visal/Documents/Projects/gym_app-main/src/components/Dashboard.js",["189","190","191","192","193","194","195"],"import React, { Component } from \"react\";\n\nimport { Layout, Menu } from \"antd\";\nimport {\n  MenuUnfoldOutlined,\n  MenuFoldOutlined,\n  UserOutlined,\n  VideoCameraOutlined,\n  UploadOutlined,\n} from \"@ant-design/icons\";\n\nimport SubMenu from \"antd/lib/menu/SubMenu\";\nimport TallyPage from \"./Accounts/TallyPage\";\nimport Withdraw from \"./BankTransactions/Withdraw\";\nimport LedgerPage from \"./Accounts/LedgerPage\";\nimport BankTransactionDashboard from \"./BankTransactions/Dashboard\";\nimport Deposit from \"./BankTransactions/Deposit\";\nimport StudentPage from \"./Student/StudentScreen\";\n\nimport {\n  Link,\n  Route,\n  BrowserRouter as Router,\n  Switch,\n  BrowserRouter,\n} from \"react-router-dom\";\n\nconst { Header, Sider, Content } = Layout;\n\nclass Dashboard extends Component {\n  state = {\n    collapsed: false,\n  };\n\n  toggle = () => {\n    this.setState({\n      collapsed: !this.state.collapsed,\n    });\n  };\n  render() {\n    return (\n      <BrowserRouter>\n        <Layout style={{ height: \"100vh\" }}>\n          <Sider trigger={null} collapsible collapsed={this.state.collapsed}>\n            <div className=\"logo\" />\n            <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={[\"1\"]}>\n              <Menu.Item key=\"1\" icon={<UserOutlined />}>\n                <Link to=\"/student\">Student</Link>\n              </Menu.Item>\n              <SubMenu key=\"sub1\" icon={<UserOutlined />} title=\"Accounts\">\n                <Menu.Item key=\"1\">\n                  <Link to=\"/tally\">Tally</Link>\n                </Menu.Item>\n                <Menu.Item key=\"2\">\n                  <Link to=\"/ledger\">Ledger</Link>\n                </Menu.Item>\n              </SubMenu>\n              <SubMenu\n                key=\"sub2\"\n                icon={<UserOutlined />}\n                title=\"Bank Transactions\"\n              >\n                <Menu.Item key=\"3\">\n                  <Link to=\"/bankdash\">Dashboard</Link>\n                </Menu.Item>\n                <Menu.Item key=\"4\">\n                  <Link to=\"/withdraw\">Withdraw</Link>\n                </Menu.Item>\n                <Menu.Item key=\"5\">\n                  <Link to=\"/deposit\">Deposit</Link>\n                </Menu.Item>\n              </SubMenu>\n            </Menu>\n          </Sider>\n          <Layout className=\"site-layout\">\n            <Switch>\n              <Route exact path=\"/student\" component={StudentPage} />\n              <Route exact path=\"/tally\" component={TallyPage} />\n              <Route exact path=\"/ledger\" component={LedgerPage} />\n              <Route\n                exact\n                path=\"/bankdash\"\n                component={BankTransactionDashboard}\n              />\n              <Route exact path=\"/deposit\" component={Deposit} />\n              <Route exact path=\"/withdraw\" component={Withdraw} />\n            </Switch>\n          </Layout>\n        </Layout>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default Dashboard;\n",{"ruleId":"196","replacedBy":"197"},{"ruleId":"198","replacedBy":"199"},{"ruleId":"200","severity":1,"message":"201","line":15,"column":10,"nodeType":"202","messageId":"203","endLine":15,"endColumn":14},{"ruleId":"200","severity":1,"message":"204","line":15,"column":40,"nodeType":"202","messageId":"203","endLine":15,"endColumn":46},{"ruleId":"200","severity":1,"message":"205","line":1,"column":23,"nodeType":"202","messageId":"203","endLine":1,"endColumn":38},{"ruleId":"200","severity":1,"message":"206","line":2,"column":8,"nodeType":"202","messageId":"203","endLine":2,"endColumn":13},{"ruleId":"200","severity":1,"message":"207","line":3,"column":8,"nodeType":"202","messageId":"203","endLine":3,"endColumn":15},{"ruleId":"200","severity":1,"message":"208","line":7,"column":8,"nodeType":"202","messageId":"203","endLine":7,"endColumn":16},{"ruleId":"200","severity":1,"message":"209","line":8,"column":8,"nodeType":"202","messageId":"203","endLine":8,"endColumn":14},{"ruleId":"200","severity":1,"message":"210","line":10,"column":10,"nodeType":"202","messageId":"203","endLine":10,"endColumn":20},{"ruleId":"200","severity":1,"message":"211","line":3,"column":28,"nodeType":"202","messageId":"203","endLine":3,"endColumn":36},{"ruleId":"212","severity":1,"message":"213","line":62,"column":13,"nodeType":"214","endLine":62,"endColumn":16},{"ruleId":"212","severity":1,"message":"213","line":68,"column":13,"nodeType":"214","endLine":68,"endColumn":16},{"ruleId":"212","severity":1,"message":"213","line":74,"column":13,"nodeType":"214","endLine":74,"endColumn":16},{"ruleId":"196","replacedBy":"215"},{"ruleId":"198","replacedBy":"216"},{"ruleId":"200","severity":1,"message":"217","line":18,"column":3,"nodeType":"202","messageId":"203","endLine":18,"endColumn":8},{"ruleId":"200","severity":1,"message":"218","line":22,"column":3,"nodeType":"202","messageId":"203","endLine":22,"endColumn":21},{"ruleId":"200","severity":1,"message":"219","line":24,"column":3,"nodeType":"202","messageId":"203","endLine":24,"endColumn":18},{"ruleId":"212","severity":1,"message":"213","line":82,"column":11,"nodeType":"214","endLine":82,"endColumn":14},{"ruleId":"196","replacedBy":"220"},{"ruleId":"198","replacedBy":"221"},{"ruleId":"200","severity":1,"message":"222","line":8,"column":3,"nodeType":"202","messageId":"203","endLine":8,"endColumn":9},{"ruleId":"200","severity":1,"message":"223","line":9,"column":3,"nodeType":"202","messageId":"203","endLine":9,"endColumn":9},{"ruleId":"200","severity":1,"message":"224","line":10,"column":3,"nodeType":"202","messageId":"203","endLine":10,"endColumn":6},{"ruleId":"200","severity":1,"message":"225","line":11,"column":3,"nodeType":"202","messageId":"203","endLine":11,"endColumn":6},{"ruleId":"200","severity":1,"message":"226","line":16,"column":10,"nodeType":"202","messageId":"203","endLine":16,"endColumn":23},{"ruleId":"200","severity":1,"message":"227","line":16,"column":25,"nodeType":"202","messageId":"203","endLine":16,"endColumn":38},{"ruleId":"200","severity":1,"message":"228","line":55,"column":5,"nodeType":"202","messageId":"203","endLine":55,"endColumn":19},{"ruleId":"196","replacedBy":"229"},{"ruleId":"198","replacedBy":"230"},{"ruleId":"200","severity":1,"message":"219","line":1,"column":10,"nodeType":"202","messageId":"203","endLine":1,"endColumn":25},{"ruleId":"200","severity":1,"message":"231","line":3,"column":3,"nodeType":"202","messageId":"203","endLine":3,"endColumn":18},{"ruleId":"200","severity":1,"message":"232","line":4,"column":3,"nodeType":"202","messageId":"203","endLine":4,"endColumn":21},{"ruleId":"200","severity":1,"message":"233","line":22,"column":10,"nodeType":"202","messageId":"203","endLine":22,"endColumn":21},{"ruleId":"234","severity":1,"message":"235","line":24,"column":23,"nodeType":"236","messageId":"237","endLine":24,"endColumn":25},{"ruleId":"200","severity":1,"message":"238","line":4,"column":3,"nodeType":"202","messageId":"203","endLine":4,"endColumn":9},{"ruleId":"234","severity":1,"message":"235","line":84,"column":23,"nodeType":"236","messageId":"237","endLine":84,"endColumn":25},{"ruleId":"200","severity":1,"message":"239","line":5,"column":3,"nodeType":"202","messageId":"203","endLine":5,"endColumn":21},{"ruleId":"200","severity":1,"message":"240","line":6,"column":3,"nodeType":"202","messageId":"203","endLine":6,"endColumn":19},{"ruleId":"200","severity":1,"message":"241","line":8,"column":3,"nodeType":"202","messageId":"203","endLine":8,"endColumn":22},{"ruleId":"200","severity":1,"message":"242","line":9,"column":3,"nodeType":"202","messageId":"203","endLine":9,"endColumn":17},{"ruleId":"200","severity":1,"message":"204","line":23,"column":20,"nodeType":"202","messageId":"203","endLine":23,"endColumn":26},{"ruleId":"200","severity":1,"message":"243","line":28,"column":9,"nodeType":"202","messageId":"203","endLine":28,"endColumn":15},{"ruleId":"200","severity":1,"message":"244","line":28,"column":24,"nodeType":"202","messageId":"203","endLine":28,"endColumn":31},"no-native-reassign",["245"],"no-negated-in-lhs",["246"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'Router' is defined but never used.","'applyMiddleware' is defined but never used.","'thunk' is defined but never used.","'Student' is defined but never used.","'Students' is defined but never used.","'Avatar' is defined but never used.","'addStudent' is defined but never used.","'useState' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["245"],["246"],"'setCB' is defined but never used.","'setTransactionDate' is defined but never used.","'setTransactions' is defined but never used.",["245"],["246"],"'Switch' is defined but never used.","'Select' is defined but never used.","'Col' is defined but never used.","'Row' is defined but never used.","'CloseOutlined' is defined but never used.","'CheckOutlined' is defined but never used.","'paymentPackage' is assigned a value but never used.",["245"],["246"],"'ADD_TRANSACTION' is defined but never used.","'DELETE_TRANSACTION' is defined but never used.","'arrayRemove' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'SET_CB' is defined but never used.","'MenuUnfoldOutlined' is defined but never used.","'MenuFoldOutlined' is defined but never used.","'VideoCameraOutlined' is defined but never used.","'UploadOutlined' is defined but never used.","'Header' is assigned a value but never used.","'Content' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]